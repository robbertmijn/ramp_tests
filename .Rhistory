if(!requireNamespace("remotes")) {
install.packages("remotes")
}
remotes::install_github("grimbough/FITfileR")
# if(!requireNamespace("remotes")) {
#   install.packages("remotes")
# }
# remotes::install_github("grimbough/FITfileR")
library(FITfiler)
setwd("/Volumes/GoogleDrive-103405781638992341338/My Drive/projecten_cloud/ramp_tests")
setwd("/Volumes/GoogleDrive-103405781638992341338/My Drive/projecten_cloud/ramp_tests")
# if(!requireNamespace("remotes")) {
#   install.packages("remotes")
# }
# remotes::install_github("grimbough/FITfileR")
library(FITfileR)
files <- Sys.glob("*.fit")
temp <- readFitFile(files[1])
temp
t <- records(temp)
View(t)
library(data.table)
t <- data.table(t)
library(ggplot2)
ggplot(t, aes(x = timestamp, y = power)) +
geom_line()
library(ggplot2); theme_set(theme_classic())
ggplot(t, aes(x = timestamp, y = power)) +
geom_line()
ggplot(t, aes(x = time_from_course, y = power)) +
geom_line()
View(t)
temp <- readFitFile(files[1])
tlaps <- laps(temp)
trecs <- records(temp)
trecs <- data.table(t)
tlaps
# if(!requireNamespace("remotes")) {
#   install.packages("remotes")
# }
# remotes::install_github("grimbough/FITfileR")
library(FITfileR)
library(data.table)
library(ggplot2); theme_set(theme_classic())
files <- Sys.glob("*.fit")
temp <- readFitFile(files[1])
tlaps <- laps(temp)
trecs <- records(temp)
trecs <- data.table(t)
View(tlaps)
records(temp)
es[1])
tlaps <-
laps(temp)
laps(temp)
# if(!requireNamespace("remotes")) {
#   install.packages("remotes")
# }
# remotes::install_github("grimbough/FITfileR")
library(FITfileR)
library(data.table)
library(ggplot2); theme_set(theme_classic())
files <- Sys.glob("*.fit")
temp <- readFitFile(files[1])
tlaps <- data.table(laps(temp))
trecs <- data.table(records(temp))
tlaps
tlaps[total_timer_time == 60]
tlaps[total_timer_time == 60, head(start_time, 1)]
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
start_time
library(lubridate)
trecs
trecs[, t := timestamp - start_time]
trecs
alldat <- NULL
for(f in files){
temp <- readFitFile(f)
tlaps <- data.table(laps(temp))
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
trecs <- data.table(records(temp))
trecs[, t := timestamp - start_time]
alldat <- rbind(alldat, trecs[, .(t, power, heart_rate, cadence, timestamp, filename = f)])
}
ggplot(alldat, aes(x = t, y = power, color = filename)) +
geom_line()
ggplot(alldat[t %between% -10, 1200], aes(x = t, y = power, color = filename)) +
scale_x_continuous() +
geom_line()
ggplot(alldat[t %between% c(-10, 1200)], aes(x = t, y = power, color = filename)) +
scale_x_continuous() +
geom_line()
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = power, color = filename)) +
scale_x_continuous() +
geom_line()
for(i in 1:5){
cat(filename, "\n")
temp <- readFitFile(files[i])
tlaps <- data.table(laps(temp))
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
trecs <- data.table(records(temp))
trecs[, t := timestamp - start_time]
alldat <- rbind(alldat, trecs[, .(t, power, heart_rate, cadence, timestamp, id = i)])
}
for(i in 1:5){
cat(i, "\n")
temp <- readFitFile(files[i])
tlaps <- data.table(laps(temp))
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
trecs <- data.table(records(temp))
trecs[, t := timestamp - start_time]
alldat <- rbind(alldat, trecs[, .(t, power, heart_rate, cadence, timestamp, id = i)])
}
alldat <- NULL
for(i in 1:5){
cat(i, "\n")
temp <- readFitFile(files[i])
tlaps <- data.table(laps(temp))
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
trecs <- data.table(records(temp))
trecs[, t := timestamp - start_time]
alldat <- rbind(alldat, trecs[, .(t, power, heart_rate, cadence, timestamp, id = i)])
}
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = heart_rate, color = id)) +
scale_x_continuous() +
geom_line()
alldat <- NULL
for(i in 1:5){
cat(i, "\n")
temp <- readFitFile(files[i])
tlaps <- data.table(laps(temp))
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
trecs <- data.table(records(temp))
trecs[, t := timestamp - start_time]
alldat <- rbind(alldat, trecs[, .(t, power, heart_rate, cadence, timestamp, id = as.factor(i))])
}
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = heart_rate, color = id)) +
scale_x_continuous() +
geom_line()
library(zoo)
alldat[, hr := rollmean(heart_rate, 5)]
alldat[, hr := rollmean(heart_rate, 5, fill = T), by = id]
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line()
alldat[, hr := rollmean(heart_rate, 10, fill = T), by = id]
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line()
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line() +
geom_vline(aes(xintercept = seq(0, 1000, by = 60)))
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line() +
geom_vline(xintercept = seq(0, 1000, by = 60))
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line() +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .3)
alldat[, hr := rollmean(heart_rate, 5, fill = T), by = id]
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line() +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .3)
alldat[, hr := rollmean(heart_rate, 10, fill = T), by = id]
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line() +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .3)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line() +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
setwd("/Volumes/GoogleDrive-103405781638992341338/My Drive/projecten_cloud/ramp_tests")
# if(!requireNamespace("remotes")) {
#   install.packages("remotes")
# }
# remotes::install_github("grimbough/FITfileR")
library(FITfileR)
library(data.table)
library(ggplot2); theme_set(theme_classic())
library(lubridate)
library(zoo)
files <- Sys.glob("*.fit")
alldat <- NULL
for(i in 1:5){
cat(i, "\n")
temp <- readFitFile(files[i])
tlaps <- data.table(laps(temp))
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
trecs <- data.table(records(temp))
trecs[, t := timestamp - start_time]
alldat <- rbind(alldat, trecs[, .(t, power, heart_rate, cadence, timestamp, id = as.factor(i))])
}
alldat[, hr := rollmean(heart_rate, 10, fill = T), by = id]
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line() +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = power, color = id)) +
scale_x_continuous() +
geom_line() +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, y = hr, color = id)) +
scale_x_continuous() +
geom_line() +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
alldat[, hr.t := (hr * 4 ) - 400 ]
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = hr.t), linetype = 2) +
geom_line(aes(y = power)) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power)) +
geom_line(aes(y = hr.t), linetype = 2) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power)) +
geom_line(aes(y = hr.t), linetype = 2) +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~.*4-400, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power)) +
geom_line(aes(y = hr.t), linetype = 2) +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~./4-400, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power)) +
geom_line(aes(y = hr.t), linetype = 2) +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~./4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power)) +
geom_line(aes(y = hr.t), linetype = 2) +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~.(+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power)) +
geom_line(aes(y = hr.t), linetype = 2) +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
alldat[, power := rollmean(power, 10, fill = T), by = id]
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power)) +
geom_line(aes(y = hr.t), linetype = 2) +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
# if(!requireNamespace("remotes")) {
#   install.packages("remotes")
# }
# remotes::install_github("grimbough/FITfileR")
library(FITfileR)
library(data.table)
library(ggplot2); theme_set(theme_classic())
library(lubridate)
library(zoo)
files <- Sys.glob("*.fit")
alldat <- NULL
for(i in 1:5){
cat(i, "\n")
temp <- readFitFile(files[i])
tlaps <- data.table(laps(temp))
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
trecs <- data.table(records(temp))
trecs[, t := timestamp - start_time]
alldat <- rbind(alldat, trecs[, .(t, power, heart_rate, cadence, timestamp, id = as.factor(i))])
}
alldat[, hr := rollmean(heart_rate, 10, fill = T), by = id]
alldat[, power.s := rollmean(power, 10, fill = T), by = id]
alldat[, hr.t := (hr * 4 ) - 400 ]
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power.s)) +
geom_line(aes(y = hr.t), linetype = 2) +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
trecs[, month(timestamp)]
trecs[, mdy(timestamp)]
trecs[, date(timestamp)]
alldat <- NULL
for(i in 1:5){
cat(i, "\n")
temp <- readFitFile(files[i])
tlaps <- data.table(laps(temp))
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
trecs <- data.table(records(temp))
trecs[, t := timestamp - start_time]
alldat <- rbind(alldat, trecs[, .(t, power, heart_rate, cadence, timestamp, id = as.factor(date(timestamp)))])
}
alldat[, hr := rollmean(heart_rate, 10, fill = T), by = id]
alldat[, power.s := rollmean(power, 10, fill = T), by = id]
alldat[, hr.t := (hr * 4 ) - 400 ]
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power.s)) +
geom_line(aes(y = hr.t), linetype = 2) +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "Set1") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "greens") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "Accent") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "Set1") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = id)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "Dark2") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .2)
# if(!requireNamespace("remotes")) {
#   install.packages("remotes")
# }
# remotes::install_github("grimbough/FITfileR")
library(FITfileR) # to read fitfiles, download through github
library(data.table)
library(ggplot2); theme_set(theme_classic())
library(lubridate) # to parse timestamps
library(zoo) # to smooth signal
# locate fitfiles in wd
files <- Sys.glob("*.fit")
# populate data.table
alldat <- NULL
for(i in 1:length(files)){
cat("processing ", files[i], "\n")
temp <- readFitFile(files[i])
# get lap info saved by zwift
tlaps <- data.table(laps(temp))
# Find the start_time of the first lap that lasted 60 seconds (start of the ramp test)
start_time <- tlaps[total_timer_time == 60, head(start_time, 1)]
# get records
trecs <- data.table(records(temp))
# make time relative to start of the ramp test
trecs[, t := timestamp - start_time]
# keep only variables of interest and bind to table
alldat <- rbind(alldat, trecs[, .(t,
power,
heart_rate,
cadence,
timestamp,
date = as.factor(date(timestamp)))])
}
# Smooth hr and power with rolling mean of 10 seconds
alldat[, hr := rollmean(heart_rate, 10, fill = T), by = id]
alldat[, power.s := rollmean(power, 10, fill = T), by = id]
# transform so heartrate and power have similar scale
alldat[, hr.t := (hr * 4 ) - 400 ]
# plot
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = date)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "Dark2") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .1)
# Smooth hr and power with rolling mean of 10 seconds
alldat[, hr := rollmean(heart_rate, 10, fill = T), by = date]
alldat[, power.s := rollmean(power, 10, fill = T), by = date]
# transform so heartrate and power have similar scale
alldat[, hr.t := (hr * 4 ) - 400 ]
# plot
ggplot(alldat[t %between% c(-10, 1000)], aes(x = t, color = date)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "Dark2") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .1)
View(tlaps)
ggplot(alldat[t %between% interval], aes(x = t, color = date)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "Dark2") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1200, by = 60), alpha = .1)
# plot
interval <- c(-10, 1000)
ggplot(alldat[t %between% interval], aes(x = t, color = date)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "Dark2") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1200, by = 60), alpha = .1)
ggplot(alldat[t %between% interval], aes(x = t, color = date)) +
scale_x_continuous() +
geom_line(aes(y = power.s), alpha = .8) +
geom_line(aes(y = hr.t), alpha = .8) +
scale_color_brewer(palette = "Dark2") +
scale_y_continuous(name = "Power", sec.axis = sec_axis(trans=~(.+400)/4, name="Heart Rate")) +
geom_vline(xintercept = seq(0, 1000, by = 60), alpha = .1)
